(()=>{"use strict";class e{constructor(e,t,n,d){this.title=e,this.description=t,this.dueDate=n,this.folder=d}}const t=[];function n(n,d){let a=new FormData(n),i=Object.fromEntries(a),c=i.title,l=i.description,o=i.dueDate,s=i.priority;"addTask"===d?function(n,d,a,i){let c=new e(n,d,a,i);var l;l=c,t.push(l),console.log(t),function(e){!function(e){let t=document.querySelector(".tasks-container"),n=document.createElement("div");n.classList.add("task-container");let d=document.createElement("p");n.appendChild(d),d.classList.add("task-name"),d.innerHTML=e.title;let a=document.createElement("div"),i=document.createElement("p");i.innerHTML=e.dueDate,i.classList.add("task-date"),n.appendChild(i),a.classList.add("task-logos"),function(){let e=[];for(let t=1;t<=3;t++){let t=document.createElement("span"),n=document.createElement("img");t.appendChild(n),e.push(t)}return e[0].firstElementChild.src="/img/edit.png",e[0].classList.add("edit"),e[2].firstElementChild.src="/img/trash.png",e[2].classList.add("trash"),e[1].firstElementChild.src="/img/info.svg  ",e[1].classList.add("info"),e}().forEach((e=>a.appendChild(e))),n.appendChild(a),t.appendChild(n)}(e)}(c)}(c,l,o,s):function(e){(function(e){const t=document.querySelector(".folders-container");let n=document.createElement("a");n.classList.add("menu-link-item"),n.textContent=e,t.appendChild(n)})(e)}(c)}const d=document.getElementById("Epopup"),a=document.getElementsByClassName("popup-main");function i(e){let t=event.target.id;const n=document.getElementById("popup-header");d.style.display="flex","createFolder"==t&&(n.textContent="Create Folder",c(["Title"]),a[0].classList.add("createFolder"),l("createFolder")),"add-task"==t&&(n.textContent="Add task",c(["Title","Description","Due Date","Priority"]),l("addTask"))}function c(e){const t=document.getElementById("form");function n(e,n,d){const a=document.createElement("div");a.classList.add("input-wrapper"),t.appendChild(a);const i=document.createElement("label");i.textContent=e,i.htmlFor=d,a.appendChild(i),a.appendChild(n)}e.map((e=>{if("Title"===e){const t=document.createElement("input"),d="title";t.name=d,n(e,t,d)}if("Description"===e){const a=document.createElement("textarea");a.name="description",n(e,a)}if("Due Date"===e){const i=document.createElement("input");i.name="dueDate",i.type="date",n(e,i)}if("Priority"===e){const c=document.createElement("select");function l(e){let t=document.createElement("option");t.textContent=e,c.appendChild(t)}c.name="priority",l("Low"),l("High"),n(e,c)}}))}function l(e){let t=document.createElement("button");t.textContent="Submit",t.classList.add("submit-button"),t.type="submit",t.addEventListener("click",(function(a){a.preventDefault(),n(t.form,"addTask"===e?"addTask":"createFolder"),c.innerHTML=" ",d.style.display="none"}));let a=document.createElement("button");a.addEventListener("click",(function(e){e.preventDefault(),c.innerHTML=" ",d.style.display="none"})),a.textContent="Cancel";let i=document.createElement("div");i.appendChild(t),i.appendChild(a),i.classList.add("buttons-container");const c=document.getElementById("form");c.appendChild(i)}document.getElementById("add-task").addEventListener("click",i),document.getElementById("createFolder").addEventListener("click",i)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,